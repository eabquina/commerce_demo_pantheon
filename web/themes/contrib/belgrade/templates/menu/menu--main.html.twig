{#
/**
 * @file
 * Default theme implementation to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *
 * @ingroup templates
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0, menu_name) }}

{% macro menu_links(items, attributes, menu_level, menu_name) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul{{ attributes.addClass('menu', 'nav', 'menu-' ~ menu_name|clean_class) }}>
    {% else %}
      <ul class="dropdown-menu">
    {% endif %}
    {% for item in items %}
      {%
        set item_classes = [
          item.is_expanded? 'expanded',
          item.is_expanded and menu_level == 0 ? 'dropdown',
          item.in_active_trail ? 'active',
          'menu-' ~ menu_name|clean_class ~ '__item',
          'menu__item',
        ]
      %}
      {%
        set link_classes = [
          'menu-' ~ menu_name|clean_class ~ '__link',
          'menu__link',
        ]
      %}
      {% if menu_level == 0 and item.is_expanded %}
        <li{{ item.attributes.addClass(item_classes) }}>
          {{
            link(
              item.title,
              item.url,
              item.attributes.removeClass(item_classes).addClass(link_classes)
            )
          }}
         <span class="dropdown-toggle" type="button" data-toggle="dropdown" type="button" aria-haspopup="true" aria-expanded="false">
          <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 10.6 6">
            <path d="M5.3 6L0 .7.7 0l4.6 4.6L9.9 0l.7.7z"/>
          </svg>
        </span>
      {% else %}
        <li{{ item.attributes.addClass(item_classes) }}>
        {{
          link(
            item.title,
            item.url,
            item.attributes.removeClass(item_classes).addClass(link_classes)
          )
        }}
        {% endif %}
      {% if item.below %}
        {{ menus.menu_links(item.below, attributes.removeClass('nav'), menu_level + 1, menu_name) }}
      {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
